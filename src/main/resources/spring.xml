<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <context:property-placeholder location="classpath*:*.properties" ignore-unresolvable="true"/>

    <context:component-scan base-package="com.fufu"/>

    <!--Spring生命周期相关配置-->
   <!-- <bean id="person" clacom.fufu.spring.lifecycle.Personrson" init-method="myInit"
          destroy-method="myDestory" scope="singleton" p:name="张三" />
    <bean id="beanFactoryPostProcessor" clacom.fufu.spring.lifecycle.MyBeanPostProcessorssor"/>
    <bean id="myInstantiationAwareBeanPostProcessor" clacom.fufu.spring.lifecycle.MyInstantiationAwareBeanPostProcessorssor"/>
    <bean id="myBeanFactoryPostProcessor" clacom.fufu.spring.lifecycle.MyBeanFactoryPostProcessorssor"/>-->

    <!--Spring事务相关配置-->
    <!--数据源定义 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${mysql.jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${mysql.jdbc.maxActive}" />
        <property name="maxIdle" value="${mysql.jdbc.maxIdle}" />
        <property name="maxWait" value="${mysql.jdbc.maxWait}" />
        <property name="defaultAutoCommit" value="${mysql.jdbc.defaultAutoCommit}" />
        <property name="testOnBorrow" value="${mysql.jdbc.testOnBorrow}" />
        <property name="testWhileIdle" value="${mysql.jdbc.testWhileIdle}" />
        <property name="validationQuery" value="${mysql.jdbc.validationQuery}" />
        <property name="poolPreparedStatements" value="${mysql.jdbc.poolPreparedStatements}"/>
        <property name="maxOpenPreparedStatements" value="${mysql.jdbc.maxOpenPreparedStatements}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${mysql.jdbc.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${mysql.jdbc.minEvictableIdleTimeMillis}"/>
    </bean>

    <!--事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置 spring 的 JdbcTemplate -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--全注解-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--每个Bean都有一个代理-->
    <!--<bean id="userInfoServiceTarget" class="com.fufu.spring.transaction.UserInfoServiceImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean id="userInfoService" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="target" ref="userInfoServiceTarget"/>
        <property name="proxyInterfaces" value="com.fufu.spring.transaction.UserInfoService"/>
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>-->

    <!--所有Bean共享一个代理基类-->
    <!--<bean id="transactionBase"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
          lazy-init="true" abstract="true">
        &lt;!&ndash; 配置事务管理器 &ndash;&gt;
        <property name="transactionManager" ref="transactionManager" />
        &lt;!&ndash; 配置事务属性 &ndash;&gt;
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean id="userInfoServiceTarget" class="com.fufu.spring.transaction.UserInfoServiceImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>

    <bean id="userInfoService" parent="transactionBase" >
        <property name="target" ref="userInfoServiceTarget" />
    </bean>-->

    <!--使用拦截器-->
  <!--  <bean id="transactionInterceptor"
          class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager" />
        &lt;!&ndash; 配置事务属性 &ndash;&gt;
        <property name="transactionAttributes">
            <props>
                <prop key="*">PROPAGATION_REQUIRED</prop>
            </props>
        </property>
    </bean>

    <bean class="org.springframewproxy.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames">
            <list>
                <value>*Service</value>
            </list>
        </property>
        <property name="interceptorNames">
            <list>
                <value>transactionInterceptor</value>
            </list>
        </property>
    </bean>

    <bean id="userInfoService" class="com.fufu.spring.transaction.UserInfoServiceImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>-->

    <!--使用tx标签配置的拦截器-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
    </tx:advice>

 proxy<aop:config>
     proxy<aop:pointcut id="interceptorPointCuts"
                      expression="execution(* com.fufu.spring.transaction.*.*(..))" />
     proxy<aop:advisor advice-ref="txAdvice"
                     pointcut-ref="interceptorPointCuts" />
  proxy/aop:config>

    <bean id="userInfoService" class="com.fufu.spring.transaction.UserInfoServiceImpl">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>-->



</beans>
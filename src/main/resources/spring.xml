<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd ">

    <context:component-scan base-package="com.fufu"/>

    <bean id="person" class="com.fufu.spring.Person" init-method="myInit"
          destroy-method="myDestory" scope="singleton" p:name="张三" p:address="广州"
          p:phone="69099360" />

    <!--使Spring支持@Aspectj风格的注解切面-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--Spring基于Xml的切面-->
    <aop:config>
        <!-- 定义切点函数 -->
        <aop:pointcut id="sleepPointCut" expression="execution(* com.fufu.aop.Creature.sleep(..))"/>
        <!-- 定义切面 order 定义优先级,值越小优先级越大-->
        <aop:aspect ref="humanAdvisorSpringXML" order="0">
            <!-- 定义通知
            method 指定通知方法名,必须与MyAspectXML中的相同
            pointcut 指定切点函数
            -->
            <aop:before method="before" pointcut-ref="sleepPointCut"/>
            <!-- 后置通知  returning="returnVal" 定义返回值 必须与类中声明的名称一样-->
            <aop:after-returning method="afterReturn" pointcut-ref="sleepPointCut"  returning="returnVal" />

            <!-- 环绕通知 -->
            <aop:around method="around" pointcut-ref="sleepPointCut"  />

            <!--异常通知 throwing="throwable" 指定异常通知错误信息变量,必须与类中声明的名称一样-->
            <aop:after-throwing method="afterThrowing" pointcut-ref="sleepPointCut" throwing="throwable"/>

            <!-- 最终通知
                 method : 通知的方法(最终通知)
                 pointcut-ref : 通知应用到的切点方法
                -->
            <aop:after method="after" pointcut-ref="sleepPointCut"/>
        </aop:aspect>
    </aop:config>

</beans>